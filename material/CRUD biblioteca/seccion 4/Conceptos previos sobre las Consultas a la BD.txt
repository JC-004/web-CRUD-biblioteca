==========================
Conceptos previos sobre las Consultas a la BD
==========================

--------------------------
Realizar una consulta
--------------------------

Para realizar cualquier acci√≥n sobre la base de datos (consulta, insertar nuevos registros, modificar los existentes o borrar), necesitamos una clase PreparedStatement. Para obtenerla, se le pide dicha clase a la conexi√≥n. 

La forma de hacerlo, para una consulta, es la siguiente:

// Preparamos la consulta  
String sql = "select * from categorias";
PreparedStatement sentencia = conexion.prepareStatement(sql);  
ResultSet resultado = sentencia.executeQuery();

üî∏ La parte de prepareStatement() puede lanzar una excepci√≥n que hay que capturar.

El PreparedStatement obtenido tiene un m√©todo:
- executeQuery() ‚Üí para leer datos
- executeUpdate() ‚Üí para insertar, actualizar y eliminar

El par√°metro que se pasa es un String con la consulta en lenguaje SQL.
No hace falta terminarlo con punto y coma.

En nuestro caso:  
"select * from categorias" ‚Üí siendo `categorias` el nombre de la tabla en la base de datos.

El resultado nos lo devuelve como un **ResultSet**, que es una clase Java similar a una lista en la que est√°n los resultados de la consulta.  
Cada elemento es un registro de la base de datos.

‚ö†Ô∏è ResultSet no contiene todos los datos en memoria inmediatamente.
Va tray√©ndolos a medida que se recorren para evitar sobrecargar la memoria.

--------------------------
Leer los resultados
--------------------------

El ResultSet contiene los registros le√≠dos.  
Inicialmente, el "puntero" est√° justo delante del primer registro.

El m√©todo `.next()`:
- Avanza al siguiente registro
- Devuelve `true` si hay m√°s registros, `false` si no hay m√°s

Forma com√∫n de recorrer registros:

// Recorremos el resultado, mientras haya registros para leer
while (resultado.next()) {
    ...
}

Una vez que el puntero apunta a un registro, podemos leer los valores con:

- getInt()
- getString()
- getDate()
- etc.

Podemos usar:
- Un √≠ndice (desde 1)
- Un String con el **nombre exacto** de la columna

Ejemplo:

resultado.getInt(1);  
resultado.getString("nombre_columna");  
resultado.getDate("fecha");

‚úÖ Debemos saber qu√© tipo de datos hay en cada columna.  
‚úÖ Si nos equivocamos, ResultSet intentar√° hacer la conversi√≥n autom√°ticamente.

Por ejemplo, podemos usar getString() para:
- N√∫meros ‚Üí se devuelven como string
- Fechas ‚Üí se devuelven como string

--------------------------
Cerrar la conexi√≥n
--------------------------

Una vez que terminamos de usar la conexi√≥n, debemos cerrarla.

Ejemplo:

conexion.close();

‚û°Ô∏è Tambi√©n se cierra autom√°ticamente si el programa termina.
